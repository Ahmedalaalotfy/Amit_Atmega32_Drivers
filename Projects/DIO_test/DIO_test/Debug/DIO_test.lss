
DIO_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000426  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000047a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000047a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004ac  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  000004e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000cca  00000000  00000000  000005a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006ee  00000000  00000000  0000126a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007b8  00000000  00000000  00001958  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000134  00000000  00000000  00002110  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000449  00000000  00000000  00002244  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000793  00000000  00000000  0000268d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  00002e20  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <main>
  64:	0c 94 11 02 	jmp	0x422	; 0x422 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <LED_on>:
/* HAL */ 
#include "LED_interface.h"

void LED_on(u8 PortId, u8 PinId)

{
  6c:	cf 93       	push	r28
	if ( (PortId<=3) && (PinId<=7) ) 
  6e:	84 30       	cpi	r24, 0x04	; 4
  70:	90 f5       	brcc	.+100    	; 0xd6 <LED_on+0x6a>
  72:	68 30       	cpi	r22, 0x08	; 8
  74:	80 f5       	brcc	.+96     	; 0xd6 <LED_on+0x6a>
  76:	c6 2f       	mov	r28, r22
	{
		switch (PortId)  
  78:	81 30       	cpi	r24, 0x01	; 1
  7a:	81 f0       	breq	.+32     	; 0x9c <LED_on+0x30>
  7c:	28 f0       	brcs	.+10     	; 0x88 <LED_on+0x1c>
  7e:	82 30       	cpi	r24, 0x02	; 2
  80:	b9 f0       	breq	.+46     	; 0xb0 <LED_on+0x44>
  82:	83 30       	cpi	r24, 0x03	; 3
  84:	f9 f0       	breq	.+62     	; 0xc4 <LED_on+0x58>
  86:	27 c0       	rjmp	.+78     	; 0xd6 <LED_on+0x6a>
		{
		case 0 : //PORTA 
		DIO_setPinDirection(DIO_PORTA,PinId,DIO_PIN_OUTPUT);
  88:	41 e0       	ldi	r20, 0x01	; 1
  8a:	80 e0       	ldi	r24, 0x00	; 0
  8c:	0e 94 d7 00 	call	0x1ae	; 0x1ae <DIO_setPinDirection>
		DIO_setPinValue(DIO_PORTA,PinId,DIO_PIN_HIGH);
  90:	41 e0       	ldi	r20, 0x01	; 1
  92:	6c 2f       	mov	r22, r28
  94:	80 e0       	ldi	r24, 0x00	; 0
  96:	0e 94 4d 01 	call	0x29a	; 0x29a <DIO_setPinValue>
		break ;
  9a:	1d c0       	rjmp	.+58     	; 0xd6 <LED_on+0x6a>
		
		case 1 : //PORTB
		DIO_setPinDirection(DIO_PORTB,PinId,DIO_PIN_OUTPUT);
  9c:	41 e0       	ldi	r20, 0x01	; 1
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	0e 94 d7 00 	call	0x1ae	; 0x1ae <DIO_setPinDirection>
		DIO_setPinValue(DIO_PORTB,PinId,DIO_PIN_HIGH);
  a4:	41 e0       	ldi	r20, 0x01	; 1
  a6:	6c 2f       	mov	r22, r28
  a8:	81 e0       	ldi	r24, 0x01	; 1
  aa:	0e 94 4d 01 	call	0x29a	; 0x29a <DIO_setPinValue>
		break ;
  ae:	13 c0       	rjmp	.+38     	; 0xd6 <LED_on+0x6a>
		
		 case 2 : //PORTC
		 DIO_setPinDirection(DIO_PORTC,PinId,DIO_PIN_OUTPUT);
  b0:	41 e0       	ldi	r20, 0x01	; 1
  b2:	82 e0       	ldi	r24, 0x02	; 2
  b4:	0e 94 d7 00 	call	0x1ae	; 0x1ae <DIO_setPinDirection>
		 DIO_setPinValue(DIO_PORTC,PinId,DIO_PIN_HIGH);
  b8:	41 e0       	ldi	r20, 0x01	; 1
  ba:	6c 2f       	mov	r22, r28
  bc:	82 e0       	ldi	r24, 0x02	; 2
  be:	0e 94 4d 01 	call	0x29a	; 0x29a <DIO_setPinValue>
		 break ;
  c2:	09 c0       	rjmp	.+18     	; 0xd6 <LED_on+0x6a>
		  
		 case 3 : //PORTA
		 DIO_setPinDirection(DIO_PORTD,PinId,DIO_PIN_OUTPUT);
  c4:	41 e0       	ldi	r20, 0x01	; 1
  c6:	83 e0       	ldi	r24, 0x03	; 3
  c8:	0e 94 d7 00 	call	0x1ae	; 0x1ae <DIO_setPinDirection>
		 DIO_setPinValue(DIO_PORTD,PinId,DIO_PIN_HIGH);
  cc:	41 e0       	ldi	r20, 0x01	; 1
  ce:	6c 2f       	mov	r22, r28
  d0:	83 e0       	ldi	r24, 0x03	; 3
  d2:	0e 94 4d 01 	call	0x29a	; 0x29a <DIO_setPinValue>
		 break ;
		} 
	}
}
  d6:	cf 91       	pop	r28
  d8:	08 95       	ret

000000da <LED_off>:
void LED_off(u8 PortId, u8 PinId)

{
  da:	cf 93       	push	r28
	if ( (PortId<=3) && (PinId<=7) )
  dc:	84 30       	cpi	r24, 0x04	; 4
  de:	90 f5       	brcc	.+100    	; 0x144 <LED_off+0x6a>
  e0:	68 30       	cpi	r22, 0x08	; 8
  e2:	80 f5       	brcc	.+96     	; 0x144 <LED_off+0x6a>
  e4:	c6 2f       	mov	r28, r22
	{
		switch (PortId)
  e6:	81 30       	cpi	r24, 0x01	; 1
  e8:	81 f0       	breq	.+32     	; 0x10a <LED_off+0x30>
  ea:	28 f0       	brcs	.+10     	; 0xf6 <LED_off+0x1c>
  ec:	82 30       	cpi	r24, 0x02	; 2
  ee:	b9 f0       	breq	.+46     	; 0x11e <LED_off+0x44>
  f0:	83 30       	cpi	r24, 0x03	; 3
  f2:	f9 f0       	breq	.+62     	; 0x132 <LED_off+0x58>
  f4:	27 c0       	rjmp	.+78     	; 0x144 <LED_off+0x6a>
		{
			case 0 : //PORTA
			DIO_setPinDirection(DIO_PORTA,PinId,DIO_PIN_OUTPUT);
  f6:	41 e0       	ldi	r20, 0x01	; 1
  f8:	80 e0       	ldi	r24, 0x00	; 0
  fa:	0e 94 d7 00 	call	0x1ae	; 0x1ae <DIO_setPinDirection>
			DIO_setPinValue(DIO_PORTA,PinId,DIO_PIN_LOW);
  fe:	40 e0       	ldi	r20, 0x00	; 0
 100:	6c 2f       	mov	r22, r28
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	0e 94 4d 01 	call	0x29a	; 0x29a <DIO_setPinValue>
			break ;
 108:	1d c0       	rjmp	.+58     	; 0x144 <LED_off+0x6a>
			
			case 1 : //PORTB
			DIO_setPinDirection(DIO_PORTB,PinId,DIO_PIN_OUTPUT);
 10a:	41 e0       	ldi	r20, 0x01	; 1
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	0e 94 d7 00 	call	0x1ae	; 0x1ae <DIO_setPinDirection>
			DIO_setPinValue(DIO_PORTB,PinId,DIO_PIN_LOW);
 112:	40 e0       	ldi	r20, 0x00	; 0
 114:	6c 2f       	mov	r22, r28
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	0e 94 4d 01 	call	0x29a	; 0x29a <DIO_setPinValue>
			break ;
 11c:	13 c0       	rjmp	.+38     	; 0x144 <LED_off+0x6a>
			
			case 2 : //PORTC
			DIO_setPinDirection(DIO_PORTC,PinId,DIO_PIN_OUTPUT);
 11e:	41 e0       	ldi	r20, 0x01	; 1
 120:	82 e0       	ldi	r24, 0x02	; 2
 122:	0e 94 d7 00 	call	0x1ae	; 0x1ae <DIO_setPinDirection>
			DIO_setPinValue(DIO_PORTC,PinId,DIO_PIN_LOW);
 126:	40 e0       	ldi	r20, 0x00	; 0
 128:	6c 2f       	mov	r22, r28
 12a:	82 e0       	ldi	r24, 0x02	; 2
 12c:	0e 94 4d 01 	call	0x29a	; 0x29a <DIO_setPinValue>
			break ;
 130:	09 c0       	rjmp	.+18     	; 0x144 <LED_off+0x6a>
			
			case 3 : //PORTA
			DIO_setPinDirection(DIO_PORTD,PinId,DIO_PIN_OUTPUT);
 132:	41 e0       	ldi	r20, 0x01	; 1
 134:	83 e0       	ldi	r24, 0x03	; 3
 136:	0e 94 d7 00 	call	0x1ae	; 0x1ae <DIO_setPinDirection>
			DIO_setPinValue(DIO_PORTD,PinId,DIO_PIN_LOW);
 13a:	40 e0       	ldi	r20, 0x00	; 0
 13c:	6c 2f       	mov	r22, r28
 13e:	83 e0       	ldi	r24, 0x03	; 3
 140:	0e 94 4d 01 	call	0x29a	; 0x29a <DIO_setPinValue>
			break ;
		}
	}
}
 144:	cf 91       	pop	r28
 146:	08 95       	ret

00000148 <LED_toggle>:

void LED_toggle(u8 PortId, u8 PinId)

{
 148:	cf 93       	push	r28
	if ( (PortId<=3) && (PinId<=7) )
 14a:	84 30       	cpi	r24, 0x04	; 4
 14c:	70 f5       	brcc	.+92     	; 0x1aa <LED_toggle+0x62>
 14e:	68 30       	cpi	r22, 0x08	; 8
 150:	60 f5       	brcc	.+88     	; 0x1aa <LED_toggle+0x62>
 152:	c6 2f       	mov	r28, r22
	{
		switch (PortId)
 154:	81 30       	cpi	r24, 0x01	; 1
 156:	79 f0       	breq	.+30     	; 0x176 <LED_toggle+0x2e>
 158:	28 f0       	brcs	.+10     	; 0x164 <LED_toggle+0x1c>
 15a:	82 30       	cpi	r24, 0x02	; 2
 15c:	a9 f0       	breq	.+42     	; 0x188 <LED_toggle+0x40>
 15e:	83 30       	cpi	r24, 0x03	; 3
 160:	e1 f0       	breq	.+56     	; 0x19a <LED_toggle+0x52>
 162:	23 c0       	rjmp	.+70     	; 0x1aa <LED_toggle+0x62>
		{
			case 0 : //PORTA
			DIO_setPinDirection(DIO_PORTA,PinId,DIO_PIN_OUTPUT);
 164:	41 e0       	ldi	r20, 0x01	; 1
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	0e 94 d7 00 	call	0x1ae	; 0x1ae <DIO_setPinDirection>
			DIO_togglePinValue(DIO_PORTA,PinId);
 16c:	6c 2f       	mov	r22, r28
 16e:	80 e0       	ldi	r24, 0x00	; 0
 170:	0e 94 c3 01 	call	0x386	; 0x386 <DIO_togglePinValue>
			break ;
 174:	1a c0       	rjmp	.+52     	; 0x1aa <LED_toggle+0x62>
			
			case 1 : //PORTB
			DIO_setPinDirection(DIO_PORTB,PinId,DIO_PIN_OUTPUT);
 176:	41 e0       	ldi	r20, 0x01	; 1
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	0e 94 d7 00 	call	0x1ae	; 0x1ae <DIO_setPinDirection>
			DIO_togglePinValue(DIO_PORTB,PinId);
 17e:	6c 2f       	mov	r22, r28
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	0e 94 c3 01 	call	0x386	; 0x386 <DIO_togglePinValue>
			break ;
 186:	11 c0       	rjmp	.+34     	; 0x1aa <LED_toggle+0x62>
			
			case 2 : //PORTC
			DIO_setPinDirection(DIO_PORTC,PinId,DIO_PIN_OUTPUT);
 188:	41 e0       	ldi	r20, 0x01	; 1
 18a:	82 e0       	ldi	r24, 0x02	; 2
 18c:	0e 94 d7 00 	call	0x1ae	; 0x1ae <DIO_setPinDirection>
			DIO_togglePinValue(DIO_PORTC,PinId);
 190:	6c 2f       	mov	r22, r28
 192:	82 e0       	ldi	r24, 0x02	; 2
 194:	0e 94 c3 01 	call	0x386	; 0x386 <DIO_togglePinValue>
			break ;
 198:	08 c0       	rjmp	.+16     	; 0x1aa <LED_toggle+0x62>
			
			case 3 : //PORTA
			DIO_setPinDirection(DIO_PORTD,PinId,DIO_PIN_OUTPUT);
 19a:	41 e0       	ldi	r20, 0x01	; 1
 19c:	83 e0       	ldi	r24, 0x03	; 3
 19e:	0e 94 d7 00 	call	0x1ae	; 0x1ae <DIO_setPinDirection>
			DIO_togglePinValue(DIO_PORTD,PinId);
 1a2:	6c 2f       	mov	r22, r28
 1a4:	83 e0       	ldi	r24, 0x03	; 3
 1a6:	0e 94 c3 01 	call	0x386	; 0x386 <DIO_togglePinValue>
			break ;
		}
	}
}
 1aa:	cf 91       	pop	r28
 1ac:	08 95       	ret

000001ae <DIO_setPinDirection>:
			{
			*PinValue = DIO_PIN_HIGH ;
			}
			else 
			{
			*PinValue = DIO_PIN_LOW ; 
 1ae:	84 30       	cpi	r24, 0x04	; 4
 1b0:	08 f0       	brcs	.+2      	; 0x1b4 <DIO_setPinDirection+0x6>
 1b2:	72 c0       	rjmp	.+228    	; 0x298 <DIO_setPinDirection+0xea>
 1b4:	68 30       	cpi	r22, 0x08	; 8
 1b6:	08 f0       	brcs	.+2      	; 0x1ba <DIO_setPinDirection+0xc>
 1b8:	6f c0       	rjmp	.+222    	; 0x298 <DIO_setPinDirection+0xea>
 1ba:	42 30       	cpi	r20, 0x02	; 2
 1bc:	08 f0       	brcs	.+2      	; 0x1c0 <DIO_setPinDirection+0x12>
 1be:	6c c0       	rjmp	.+216    	; 0x298 <DIO_setPinDirection+0xea>
 1c0:	81 30       	cpi	r24, 0x01	; 1
 1c2:	01 f1       	breq	.+64     	; 0x204 <DIO_setPinDirection+0x56>
 1c4:	30 f0       	brcs	.+12     	; 0x1d2 <DIO_setPinDirection+0x24>
 1c6:	82 30       	cpi	r24, 0x02	; 2
 1c8:	b1 f1       	breq	.+108    	; 0x236 <DIO_setPinDirection+0x88>
 1ca:	83 30       	cpi	r24, 0x03	; 3
 1cc:	09 f4       	brne	.+2      	; 0x1d0 <DIO_setPinDirection+0x22>
 1ce:	4c c0       	rjmp	.+152    	; 0x268 <DIO_setPinDirection+0xba>
 1d0:	08 95       	ret
 1d2:	41 30       	cpi	r20, 0x01	; 1
 1d4:	59 f4       	brne	.+22     	; 0x1ec <DIO_setPinDirection+0x3e>
 1d6:	2a b3       	in	r18, 0x1a	; 26
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <DIO_setPinDirection+0x34>
 1de:	88 0f       	add	r24, r24
 1e0:	99 1f       	adc	r25, r25
 1e2:	6a 95       	dec	r22
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <DIO_setPinDirection+0x30>
 1e6:	82 2b       	or	r24, r18
 1e8:	8a bb       	out	0x1a, r24	; 26
 1ea:	08 95       	ret
 1ec:	2a b3       	in	r18, 0x1a	; 26
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <DIO_setPinDirection+0x4a>
 1f4:	88 0f       	add	r24, r24
 1f6:	99 1f       	adc	r25, r25
 1f8:	6a 95       	dec	r22
 1fa:	e2 f7       	brpl	.-8      	; 0x1f4 <DIO_setPinDirection+0x46>
 1fc:	80 95       	com	r24
 1fe:	82 23       	and	r24, r18
 200:	8a bb       	out	0x1a, r24	; 26
 202:	08 95       	ret
 204:	41 30       	cpi	r20, 0x01	; 1
 206:	59 f4       	brne	.+22     	; 0x21e <DIO_setPinDirection+0x70>
 208:	27 b3       	in	r18, 0x17	; 23
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	02 c0       	rjmp	.+4      	; 0x214 <DIO_setPinDirection+0x66>
 210:	88 0f       	add	r24, r24
 212:	99 1f       	adc	r25, r25
 214:	6a 95       	dec	r22
 216:	e2 f7       	brpl	.-8      	; 0x210 <DIO_setPinDirection+0x62>
 218:	82 2b       	or	r24, r18
 21a:	87 bb       	out	0x17, r24	; 23
 21c:	08 95       	ret
 21e:	27 b3       	in	r18, 0x17	; 23
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	02 c0       	rjmp	.+4      	; 0x22a <DIO_setPinDirection+0x7c>
 226:	88 0f       	add	r24, r24
 228:	99 1f       	adc	r25, r25
 22a:	6a 95       	dec	r22
 22c:	e2 f7       	brpl	.-8      	; 0x226 <DIO_setPinDirection+0x78>
 22e:	80 95       	com	r24
 230:	82 23       	and	r24, r18
 232:	87 bb       	out	0x17, r24	; 23
 234:	08 95       	ret
 236:	41 30       	cpi	r20, 0x01	; 1
 238:	59 f4       	brne	.+22     	; 0x250 <DIO_setPinDirection+0xa2>
 23a:	24 b3       	in	r18, 0x14	; 20
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	02 c0       	rjmp	.+4      	; 0x246 <DIO_setPinDirection+0x98>
 242:	88 0f       	add	r24, r24
 244:	99 1f       	adc	r25, r25
 246:	6a 95       	dec	r22
 248:	e2 f7       	brpl	.-8      	; 0x242 <DIO_setPinDirection+0x94>
 24a:	82 2b       	or	r24, r18
 24c:	84 bb       	out	0x14, r24	; 20
 24e:	08 95       	ret
 250:	24 b3       	in	r18, 0x14	; 20
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	02 c0       	rjmp	.+4      	; 0x25c <DIO_setPinDirection+0xae>
 258:	88 0f       	add	r24, r24
 25a:	99 1f       	adc	r25, r25
 25c:	6a 95       	dec	r22
 25e:	e2 f7       	brpl	.-8      	; 0x258 <DIO_setPinDirection+0xaa>
 260:	80 95       	com	r24
 262:	82 23       	and	r24, r18
 264:	84 bb       	out	0x14, r24	; 20
 266:	08 95       	ret
 268:	41 30       	cpi	r20, 0x01	; 1
 26a:	59 f4       	brne	.+22     	; 0x282 <DIO_setPinDirection+0xd4>
 26c:	21 b3       	in	r18, 0x11	; 17
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	02 c0       	rjmp	.+4      	; 0x278 <DIO_setPinDirection+0xca>
 274:	88 0f       	add	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	6a 95       	dec	r22
 27a:	e2 f7       	brpl	.-8      	; 0x274 <DIO_setPinDirection+0xc6>
 27c:	82 2b       	or	r24, r18
 27e:	81 bb       	out	0x11, r24	; 17
 280:	08 95       	ret
 282:	21 b3       	in	r18, 0x11	; 17
 284:	81 e0       	ldi	r24, 0x01	; 1
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	02 c0       	rjmp	.+4      	; 0x28e <DIO_setPinDirection+0xe0>
 28a:	88 0f       	add	r24, r24
 28c:	99 1f       	adc	r25, r25
 28e:	6a 95       	dec	r22
 290:	e2 f7       	brpl	.-8      	; 0x28a <DIO_setPinDirection+0xdc>
 292:	80 95       	com	r24
 294:	82 23       	and	r24, r18
 296:	81 bb       	out	0x11, r24	; 17
 298:	08 95       	ret

0000029a <DIO_setPinValue>:
 29a:	84 30       	cpi	r24, 0x04	; 4
 29c:	08 f0       	brcs	.+2      	; 0x2a0 <DIO_setPinValue+0x6>
 29e:	72 c0       	rjmp	.+228    	; 0x384 <DIO_setPinValue+0xea>
 2a0:	68 30       	cpi	r22, 0x08	; 8
 2a2:	08 f0       	brcs	.+2      	; 0x2a6 <DIO_setPinValue+0xc>
 2a4:	6f c0       	rjmp	.+222    	; 0x384 <DIO_setPinValue+0xea>
 2a6:	42 30       	cpi	r20, 0x02	; 2
 2a8:	08 f0       	brcs	.+2      	; 0x2ac <DIO_setPinValue+0x12>
 2aa:	6c c0       	rjmp	.+216    	; 0x384 <DIO_setPinValue+0xea>
 2ac:	81 30       	cpi	r24, 0x01	; 1
 2ae:	01 f1       	breq	.+64     	; 0x2f0 <DIO_setPinValue+0x56>
 2b0:	30 f0       	brcs	.+12     	; 0x2be <DIO_setPinValue+0x24>
 2b2:	82 30       	cpi	r24, 0x02	; 2
 2b4:	b1 f1       	breq	.+108    	; 0x322 <DIO_setPinValue+0x88>
 2b6:	83 30       	cpi	r24, 0x03	; 3
 2b8:	09 f4       	brne	.+2      	; 0x2bc <DIO_setPinValue+0x22>
 2ba:	4c c0       	rjmp	.+152    	; 0x354 <DIO_setPinValue+0xba>
 2bc:	08 95       	ret
 2be:	41 30       	cpi	r20, 0x01	; 1
 2c0:	59 f4       	brne	.+22     	; 0x2d8 <DIO_setPinValue+0x3e>
 2c2:	2b b3       	in	r18, 0x1b	; 27
 2c4:	81 e0       	ldi	r24, 0x01	; 1
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	02 c0       	rjmp	.+4      	; 0x2ce <DIO_setPinValue+0x34>
 2ca:	88 0f       	add	r24, r24
 2cc:	99 1f       	adc	r25, r25
 2ce:	6a 95       	dec	r22
 2d0:	e2 f7       	brpl	.-8      	; 0x2ca <DIO_setPinValue+0x30>
 2d2:	82 2b       	or	r24, r18
 2d4:	8b bb       	out	0x1b, r24	; 27
 2d6:	08 95       	ret
 2d8:	2b b3       	in	r18, 0x1b	; 27
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	02 c0       	rjmp	.+4      	; 0x2e4 <DIO_setPinValue+0x4a>
 2e0:	88 0f       	add	r24, r24
 2e2:	99 1f       	adc	r25, r25
 2e4:	6a 95       	dec	r22
 2e6:	e2 f7       	brpl	.-8      	; 0x2e0 <DIO_setPinValue+0x46>
 2e8:	80 95       	com	r24
 2ea:	82 23       	and	r24, r18
 2ec:	8b bb       	out	0x1b, r24	; 27
 2ee:	08 95       	ret
 2f0:	41 30       	cpi	r20, 0x01	; 1
 2f2:	59 f4       	brne	.+22     	; 0x30a <DIO_setPinValue+0x70>
 2f4:	28 b3       	in	r18, 0x18	; 24
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	02 c0       	rjmp	.+4      	; 0x300 <DIO_setPinValue+0x66>
 2fc:	88 0f       	add	r24, r24
 2fe:	99 1f       	adc	r25, r25
 300:	6a 95       	dec	r22
 302:	e2 f7       	brpl	.-8      	; 0x2fc <DIO_setPinValue+0x62>
 304:	82 2b       	or	r24, r18
 306:	88 bb       	out	0x18, r24	; 24
 308:	08 95       	ret
 30a:	28 b3       	in	r18, 0x18	; 24
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	02 c0       	rjmp	.+4      	; 0x316 <DIO_setPinValue+0x7c>
 312:	88 0f       	add	r24, r24
 314:	99 1f       	adc	r25, r25
 316:	6a 95       	dec	r22
 318:	e2 f7       	brpl	.-8      	; 0x312 <DIO_setPinValue+0x78>
 31a:	80 95       	com	r24
 31c:	82 23       	and	r24, r18
 31e:	88 bb       	out	0x18, r24	; 24
 320:	08 95       	ret
 322:	41 30       	cpi	r20, 0x01	; 1
 324:	59 f4       	brne	.+22     	; 0x33c <DIO_setPinValue+0xa2>
 326:	25 b3       	in	r18, 0x15	; 21
 328:	81 e0       	ldi	r24, 0x01	; 1
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	02 c0       	rjmp	.+4      	; 0x332 <DIO_setPinValue+0x98>
 32e:	88 0f       	add	r24, r24
 330:	99 1f       	adc	r25, r25
 332:	6a 95       	dec	r22
 334:	e2 f7       	brpl	.-8      	; 0x32e <DIO_setPinValue+0x94>
 336:	82 2b       	or	r24, r18
 338:	85 bb       	out	0x15, r24	; 21
 33a:	08 95       	ret
 33c:	25 b3       	in	r18, 0x15	; 21
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	02 c0       	rjmp	.+4      	; 0x348 <DIO_setPinValue+0xae>
 344:	88 0f       	add	r24, r24
 346:	99 1f       	adc	r25, r25
 348:	6a 95       	dec	r22
 34a:	e2 f7       	brpl	.-8      	; 0x344 <DIO_setPinValue+0xaa>
 34c:	80 95       	com	r24
 34e:	82 23       	and	r24, r18
 350:	85 bb       	out	0x15, r24	; 21
 352:	08 95       	ret
 354:	41 30       	cpi	r20, 0x01	; 1
 356:	59 f4       	brne	.+22     	; 0x36e <DIO_setPinValue+0xd4>
 358:	22 b3       	in	r18, 0x12	; 18
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	02 c0       	rjmp	.+4      	; 0x364 <DIO_setPinValue+0xca>
 360:	88 0f       	add	r24, r24
 362:	99 1f       	adc	r25, r25
 364:	6a 95       	dec	r22
 366:	e2 f7       	brpl	.-8      	; 0x360 <DIO_setPinValue+0xc6>
 368:	82 2b       	or	r24, r18
 36a:	82 bb       	out	0x12, r24	; 18
 36c:	08 95       	ret
 36e:	22 b3       	in	r18, 0x12	; 18
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	90 e0       	ldi	r25, 0x00	; 0
 374:	02 c0       	rjmp	.+4      	; 0x37a <DIO_setPinValue+0xe0>
 376:	88 0f       	add	r24, r24
 378:	99 1f       	adc	r25, r25
 37a:	6a 95       	dec	r22
 37c:	e2 f7       	brpl	.-8      	; 0x376 <DIO_setPinValue+0xdc>
 37e:	80 95       	com	r24
 380:	82 23       	and	r24, r18
 382:	82 bb       	out	0x12, r24	; 18
 384:	08 95       	ret

00000386 <DIO_togglePinValue>:

void DIO_togglePinValue(u8 PortId, u8 PinId)

{
	
	if ( (PortId<=3) && (PinId<=7) ) 
 386:	84 30       	cpi	r24, 0x04	; 4
 388:	a8 f5       	brcc	.+106    	; 0x3f4 <DIO_togglePinValue+0x6e>
 38a:	68 30       	cpi	r22, 0x08	; 8
 38c:	98 f5       	brcc	.+102    	; 0x3f4 <DIO_togglePinValue+0x6e>
	{
		switch (PortId ) 
 38e:	81 30       	cpi	r24, 0x01	; 1
 390:	89 f0       	breq	.+34     	; 0x3b4 <DIO_togglePinValue+0x2e>
 392:	28 f0       	brcs	.+10     	; 0x39e <DIO_togglePinValue+0x18>
 394:	82 30       	cpi	r24, 0x02	; 2
 396:	c9 f0       	breq	.+50     	; 0x3ca <DIO_togglePinValue+0x44>
 398:	83 30       	cpi	r24, 0x03	; 3
 39a:	11 f1       	breq	.+68     	; 0x3e0 <DIO_togglePinValue+0x5a>
 39c:	08 95       	ret
		{
			case 0 : // DIO_PORTA
			
			TOG_BIT(PORTA,PinId) ; 
 39e:	2b b3       	in	r18, 0x1b	; 27
 3a0:	81 e0       	ldi	r24, 0x01	; 1
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	02 c0       	rjmp	.+4      	; 0x3aa <DIO_togglePinValue+0x24>
 3a6:	88 0f       	add	r24, r24
 3a8:	99 1f       	adc	r25, r25
 3aa:	6a 95       	dec	r22
 3ac:	e2 f7       	brpl	.-8      	; 0x3a6 <DIO_togglePinValue+0x20>
 3ae:	82 27       	eor	r24, r18
 3b0:	8b bb       	out	0x1b, r24	; 27
			
			break ; 
 3b2:	08 95       	ret
			
			case 1 : // DIO_PORTB
			
			TOG_BIT(PORTB,PinId) ; 
 3b4:	28 b3       	in	r18, 0x18	; 24
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <DIO_togglePinValue+0x3a>
 3bc:	88 0f       	add	r24, r24
 3be:	99 1f       	adc	r25, r25
 3c0:	6a 95       	dec	r22
 3c2:	e2 f7       	brpl	.-8      	; 0x3bc <DIO_togglePinValue+0x36>
 3c4:	82 27       	eor	r24, r18
 3c6:	88 bb       	out	0x18, r24	; 24
			
			break ; 
 3c8:	08 95       	ret
			
			case 2 : // DIO_PORTC
			
			TOG_BIT(PORTC,PinId) ; 
 3ca:	25 b3       	in	r18, 0x15	; 21
 3cc:	81 e0       	ldi	r24, 0x01	; 1
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	02 c0       	rjmp	.+4      	; 0x3d6 <DIO_togglePinValue+0x50>
 3d2:	88 0f       	add	r24, r24
 3d4:	99 1f       	adc	r25, r25
 3d6:	6a 95       	dec	r22
 3d8:	e2 f7       	brpl	.-8      	; 0x3d2 <DIO_togglePinValue+0x4c>
 3da:	82 27       	eor	r24, r18
 3dc:	85 bb       	out	0x15, r24	; 21
			
			break ; 
 3de:	08 95       	ret
			
			case 3 : // DIO_PORTD
			
			TOG_BIT(PORTD,PinId) ; 
 3e0:	22 b3       	in	r18, 0x12	; 18
 3e2:	81 e0       	ldi	r24, 0x01	; 1
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	02 c0       	rjmp	.+4      	; 0x3ec <DIO_togglePinValue+0x66>
 3e8:	88 0f       	add	r24, r24
 3ea:	99 1f       	adc	r25, r25
 3ec:	6a 95       	dec	r22
 3ee:	e2 f7       	brpl	.-8      	; 0x3e8 <DIO_togglePinValue+0x62>
 3f0:	82 27       	eor	r24, r18
 3f2:	82 bb       	out	0x12, r24	; 18
 3f4:	08 95       	ret

000003f6 <main>:
#include "LED_interface.h"


int main(void)
{
    	LED_on(DIO_PORTC,DIO_PIN2);
 3f6:	62 e0       	ldi	r22, 0x02	; 2
 3f8:	82 e0       	ldi	r24, 0x02	; 2
 3fa:	0e 94 36 00 	call	0x6c	; 0x6c <LED_on>
    	LED_off(DIO_PORTC,DIO_PIN7);
 3fe:	67 e0       	ldi	r22, 0x07	; 7
 400:	82 e0       	ldi	r24, 0x02	; 2
 402:	0e 94 6d 00 	call	0xda	; 0xda <LED_off>

    while (1) 
    {
		

		LED_toggle(DIO_PORTD,DIO_PIN3);
 406:	63 e0       	ldi	r22, 0x03	; 3
 408:	83 e0       	ldi	r24, 0x03	; 3
 40a:	0e 94 a4 00 	call	0x148	; 0x148 <LED_toggle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 40e:	2f ef       	ldi	r18, 0xFF	; 255
 410:	84 e3       	ldi	r24, 0x34	; 52
 412:	9c e0       	ldi	r25, 0x0C	; 12
 414:	21 50       	subi	r18, 0x01	; 1
 416:	80 40       	sbci	r24, 0x00	; 0
 418:	90 40       	sbci	r25, 0x00	; 0
 41a:	e1 f7       	brne	.-8      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 41c:	00 c0       	rjmp	.+0      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 41e:	00 00       	nop
 420:	f2 cf       	rjmp	.-28     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>

00000422 <_exit>:
 422:	f8 94       	cli

00000424 <__stop_program>:
 424:	ff cf       	rjmp	.-2      	; 0x424 <__stop_program>
