
SWITCH_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000430  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000484  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000484  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004b4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  000004f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a5a  00000000  00000000  00000598  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000697  00000000  00000000  00000ff2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000067e  00000000  00000000  00001689  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000012c  00000000  00000000  00001d08  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000048a  00000000  00000000  00001e34  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005fa  00000000  00000000  000022be  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  000028b8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 ac 01 	call	0x358	; 0x358 <main>
  64:	0c 94 16 02 	jmp	0x42c	; 0x42c <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_setPinDirection>:
			case 2 : // PORTC 
			PORTC = ~PORTC ; 
			break;
			
			case 3 : // PORTD 
			PORTD = ~PORTD ; 
  6c:	84 30       	cpi	r24, 0x04	; 4
  6e:	08 f0       	brcs	.+2      	; 0x72 <DIO_setPinDirection+0x6>
  70:	72 c0       	rjmp	.+228    	; 0x156 <DIO_setPinDirection+0xea>
  72:	68 30       	cpi	r22, 0x08	; 8
  74:	08 f0       	brcs	.+2      	; 0x78 <DIO_setPinDirection+0xc>
  76:	6f c0       	rjmp	.+222    	; 0x156 <DIO_setPinDirection+0xea>
  78:	42 30       	cpi	r20, 0x02	; 2
  7a:	08 f0       	brcs	.+2      	; 0x7e <DIO_setPinDirection+0x12>
  7c:	6c c0       	rjmp	.+216    	; 0x156 <DIO_setPinDirection+0xea>
  7e:	81 30       	cpi	r24, 0x01	; 1
  80:	01 f1       	breq	.+64     	; 0xc2 <DIO_setPinDirection+0x56>
  82:	30 f0       	brcs	.+12     	; 0x90 <DIO_setPinDirection+0x24>
  84:	82 30       	cpi	r24, 0x02	; 2
  86:	b1 f1       	breq	.+108    	; 0xf4 <DIO_setPinDirection+0x88>
  88:	83 30       	cpi	r24, 0x03	; 3
  8a:	09 f4       	brne	.+2      	; 0x8e <DIO_setPinDirection+0x22>
  8c:	4c c0       	rjmp	.+152    	; 0x126 <DIO_setPinDirection+0xba>
  8e:	08 95       	ret
  90:	41 30       	cpi	r20, 0x01	; 1
  92:	59 f4       	brne	.+22     	; 0xaa <DIO_setPinDirection+0x3e>
  94:	2a b3       	in	r18, 0x1a	; 26
  96:	81 e0       	ldi	r24, 0x01	; 1
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	02 c0       	rjmp	.+4      	; 0xa0 <DIO_setPinDirection+0x34>
  9c:	88 0f       	add	r24, r24
  9e:	99 1f       	adc	r25, r25
  a0:	6a 95       	dec	r22
  a2:	e2 f7       	brpl	.-8      	; 0x9c <DIO_setPinDirection+0x30>
  a4:	82 2b       	or	r24, r18
  a6:	8a bb       	out	0x1a, r24	; 26
  a8:	08 95       	ret
  aa:	2a b3       	in	r18, 0x1a	; 26
  ac:	81 e0       	ldi	r24, 0x01	; 1
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	02 c0       	rjmp	.+4      	; 0xb6 <DIO_setPinDirection+0x4a>
  b2:	88 0f       	add	r24, r24
  b4:	99 1f       	adc	r25, r25
  b6:	6a 95       	dec	r22
  b8:	e2 f7       	brpl	.-8      	; 0xb2 <DIO_setPinDirection+0x46>
  ba:	80 95       	com	r24
  bc:	82 23       	and	r24, r18
  be:	8a bb       	out	0x1a, r24	; 26
  c0:	08 95       	ret
  c2:	41 30       	cpi	r20, 0x01	; 1
  c4:	59 f4       	brne	.+22     	; 0xdc <DIO_setPinDirection+0x70>
  c6:	27 b3       	in	r18, 0x17	; 23
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	02 c0       	rjmp	.+4      	; 0xd2 <DIO_setPinDirection+0x66>
  ce:	88 0f       	add	r24, r24
  d0:	99 1f       	adc	r25, r25
  d2:	6a 95       	dec	r22
  d4:	e2 f7       	brpl	.-8      	; 0xce <DIO_setPinDirection+0x62>
  d6:	82 2b       	or	r24, r18
  d8:	87 bb       	out	0x17, r24	; 23
  da:	08 95       	ret
  dc:	27 b3       	in	r18, 0x17	; 23
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <DIO_setPinDirection+0x7c>
  e4:	88 0f       	add	r24, r24
  e6:	99 1f       	adc	r25, r25
  e8:	6a 95       	dec	r22
  ea:	e2 f7       	brpl	.-8      	; 0xe4 <DIO_setPinDirection+0x78>
  ec:	80 95       	com	r24
  ee:	82 23       	and	r24, r18
  f0:	87 bb       	out	0x17, r24	; 23
  f2:	08 95       	ret
  f4:	41 30       	cpi	r20, 0x01	; 1
  f6:	59 f4       	brne	.+22     	; 0x10e <DIO_setPinDirection+0xa2>
  f8:	24 b3       	in	r18, 0x14	; 20
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	02 c0       	rjmp	.+4      	; 0x104 <DIO_setPinDirection+0x98>
 100:	88 0f       	add	r24, r24
 102:	99 1f       	adc	r25, r25
 104:	6a 95       	dec	r22
 106:	e2 f7       	brpl	.-8      	; 0x100 <DIO_setPinDirection+0x94>
 108:	82 2b       	or	r24, r18
 10a:	84 bb       	out	0x14, r24	; 20
 10c:	08 95       	ret
 10e:	24 b3       	in	r18, 0x14	; 20
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	02 c0       	rjmp	.+4      	; 0x11a <DIO_setPinDirection+0xae>
 116:	88 0f       	add	r24, r24
 118:	99 1f       	adc	r25, r25
 11a:	6a 95       	dec	r22
 11c:	e2 f7       	brpl	.-8      	; 0x116 <DIO_setPinDirection+0xaa>
 11e:	80 95       	com	r24
 120:	82 23       	and	r24, r18
 122:	84 bb       	out	0x14, r24	; 20
 124:	08 95       	ret
 126:	41 30       	cpi	r20, 0x01	; 1
 128:	59 f4       	brne	.+22     	; 0x140 <DIO_setPinDirection+0xd4>
 12a:	21 b3       	in	r18, 0x11	; 17
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	02 c0       	rjmp	.+4      	; 0x136 <DIO_setPinDirection+0xca>
 132:	88 0f       	add	r24, r24
 134:	99 1f       	adc	r25, r25
 136:	6a 95       	dec	r22
 138:	e2 f7       	brpl	.-8      	; 0x132 <DIO_setPinDirection+0xc6>
 13a:	82 2b       	or	r24, r18
 13c:	81 bb       	out	0x11, r24	; 17
 13e:	08 95       	ret
 140:	21 b3       	in	r18, 0x11	; 17
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	02 c0       	rjmp	.+4      	; 0x14c <DIO_setPinDirection+0xe0>
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	6a 95       	dec	r22
 14e:	e2 f7       	brpl	.-8      	; 0x148 <DIO_setPinDirection+0xdc>
 150:	80 95       	com	r24
 152:	82 23       	and	r24, r18
 154:	81 bb       	out	0x11, r24	; 17
 156:	08 95       	ret

00000158 <DIO_setPinValue>:
 158:	84 30       	cpi	r24, 0x04	; 4
 15a:	08 f0       	brcs	.+2      	; 0x15e <DIO_setPinValue+0x6>
 15c:	72 c0       	rjmp	.+228    	; 0x242 <DIO_setPinValue+0xea>
 15e:	68 30       	cpi	r22, 0x08	; 8
 160:	08 f0       	brcs	.+2      	; 0x164 <DIO_setPinValue+0xc>
 162:	6f c0       	rjmp	.+222    	; 0x242 <DIO_setPinValue+0xea>
 164:	42 30       	cpi	r20, 0x02	; 2
 166:	08 f0       	brcs	.+2      	; 0x16a <DIO_setPinValue+0x12>
 168:	6c c0       	rjmp	.+216    	; 0x242 <DIO_setPinValue+0xea>
 16a:	81 30       	cpi	r24, 0x01	; 1
 16c:	01 f1       	breq	.+64     	; 0x1ae <DIO_setPinValue+0x56>
 16e:	30 f0       	brcs	.+12     	; 0x17c <DIO_setPinValue+0x24>
 170:	82 30       	cpi	r24, 0x02	; 2
 172:	b1 f1       	breq	.+108    	; 0x1e0 <DIO_setPinValue+0x88>
 174:	83 30       	cpi	r24, 0x03	; 3
 176:	09 f4       	brne	.+2      	; 0x17a <DIO_setPinValue+0x22>
 178:	4c c0       	rjmp	.+152    	; 0x212 <DIO_setPinValue+0xba>
 17a:	08 95       	ret
 17c:	41 30       	cpi	r20, 0x01	; 1
 17e:	59 f4       	brne	.+22     	; 0x196 <DIO_setPinValue+0x3e>
 180:	2b b3       	in	r18, 0x1b	; 27
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	02 c0       	rjmp	.+4      	; 0x18c <DIO_setPinValue+0x34>
 188:	88 0f       	add	r24, r24
 18a:	99 1f       	adc	r25, r25
 18c:	6a 95       	dec	r22
 18e:	e2 f7       	brpl	.-8      	; 0x188 <DIO_setPinValue+0x30>
 190:	82 2b       	or	r24, r18
 192:	8b bb       	out	0x1b, r24	; 27
 194:	08 95       	ret
 196:	2b b3       	in	r18, 0x1b	; 27
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	02 c0       	rjmp	.+4      	; 0x1a2 <DIO_setPinValue+0x4a>
 19e:	88 0f       	add	r24, r24
 1a0:	99 1f       	adc	r25, r25
 1a2:	6a 95       	dec	r22
 1a4:	e2 f7       	brpl	.-8      	; 0x19e <DIO_setPinValue+0x46>
 1a6:	80 95       	com	r24
 1a8:	82 23       	and	r24, r18
 1aa:	8b bb       	out	0x1b, r24	; 27
 1ac:	08 95       	ret
 1ae:	41 30       	cpi	r20, 0x01	; 1
 1b0:	59 f4       	brne	.+22     	; 0x1c8 <DIO_setPinValue+0x70>
 1b2:	28 b3       	in	r18, 0x18	; 24
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	02 c0       	rjmp	.+4      	; 0x1be <DIO_setPinValue+0x66>
 1ba:	88 0f       	add	r24, r24
 1bc:	99 1f       	adc	r25, r25
 1be:	6a 95       	dec	r22
 1c0:	e2 f7       	brpl	.-8      	; 0x1ba <DIO_setPinValue+0x62>
 1c2:	82 2b       	or	r24, r18
 1c4:	88 bb       	out	0x18, r24	; 24
 1c6:	08 95       	ret
 1c8:	28 b3       	in	r18, 0x18	; 24
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <DIO_setPinValue+0x7c>
 1d0:	88 0f       	add	r24, r24
 1d2:	99 1f       	adc	r25, r25
 1d4:	6a 95       	dec	r22
 1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <DIO_setPinValue+0x78>
 1d8:	80 95       	com	r24
 1da:	82 23       	and	r24, r18
 1dc:	88 bb       	out	0x18, r24	; 24
 1de:	08 95       	ret
 1e0:	41 30       	cpi	r20, 0x01	; 1
 1e2:	59 f4       	brne	.+22     	; 0x1fa <DIO_setPinValue+0xa2>
 1e4:	25 b3       	in	r18, 0x15	; 21
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <DIO_setPinValue+0x98>
 1ec:	88 0f       	add	r24, r24
 1ee:	99 1f       	adc	r25, r25
 1f0:	6a 95       	dec	r22
 1f2:	e2 f7       	brpl	.-8      	; 0x1ec <DIO_setPinValue+0x94>
 1f4:	82 2b       	or	r24, r18
 1f6:	85 bb       	out	0x15, r24	; 21
 1f8:	08 95       	ret
 1fa:	25 b3       	in	r18, 0x15	; 21
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	02 c0       	rjmp	.+4      	; 0x206 <DIO_setPinValue+0xae>
 202:	88 0f       	add	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	6a 95       	dec	r22
 208:	e2 f7       	brpl	.-8      	; 0x202 <DIO_setPinValue+0xaa>
 20a:	80 95       	com	r24
 20c:	82 23       	and	r24, r18
 20e:	85 bb       	out	0x15, r24	; 21
 210:	08 95       	ret
 212:	41 30       	cpi	r20, 0x01	; 1
 214:	59 f4       	brne	.+22     	; 0x22c <DIO_setPinValue+0xd4>
 216:	22 b3       	in	r18, 0x12	; 18
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 c0       	rjmp	.+4      	; 0x222 <DIO_setPinValue+0xca>
 21e:	88 0f       	add	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	6a 95       	dec	r22
 224:	e2 f7       	brpl	.-8      	; 0x21e <DIO_setPinValue+0xc6>
 226:	82 2b       	or	r24, r18
 228:	82 bb       	out	0x12, r24	; 18
 22a:	08 95       	ret
 22c:	22 b3       	in	r18, 0x12	; 18
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	02 c0       	rjmp	.+4      	; 0x238 <DIO_setPinValue+0xe0>
 234:	88 0f       	add	r24, r24
 236:	99 1f       	adc	r25, r25
 238:	6a 95       	dec	r22
 23a:	e2 f7       	brpl	.-8      	; 0x234 <DIO_setPinValue+0xdc>
 23c:	80 95       	com	r24
 23e:	82 23       	and	r24, r18
 240:	82 bb       	out	0x12, r24	; 18
 242:	08 95       	ret

00000244 <DIO_getPinValue>:
 244:	84 30       	cpi	r24, 0x04	; 4
 246:	08 f0       	brcs	.+2      	; 0x24a <DIO_getPinValue+0x6>
 248:	4e c0       	rjmp	.+156    	; 0x2e6 <DIO_getPinValue+0xa2>
 24a:	68 30       	cpi	r22, 0x08	; 8
 24c:	08 f0       	brcs	.+2      	; 0x250 <DIO_getPinValue+0xc>
 24e:	4b c0       	rjmp	.+150    	; 0x2e6 <DIO_getPinValue+0xa2>
 250:	41 15       	cp	r20, r1
 252:	51 05       	cpc	r21, r1
 254:	09 f4       	brne	.+2      	; 0x258 <DIO_getPinValue+0x14>
 256:	47 c0       	rjmp	.+142    	; 0x2e6 <DIO_getPinValue+0xa2>
 258:	81 30       	cpi	r24, 0x01	; 1
 25a:	b1 f0       	breq	.+44     	; 0x288 <DIO_getPinValue+0x44>
 25c:	28 f0       	brcs	.+10     	; 0x268 <DIO_getPinValue+0x24>
 25e:	82 30       	cpi	r24, 0x02	; 2
 260:	19 f1       	breq	.+70     	; 0x2a8 <DIO_getPinValue+0x64>
 262:	83 30       	cpi	r24, 0x03	; 3
 264:	89 f1       	breq	.+98     	; 0x2c8 <DIO_getPinValue+0x84>
 266:	08 95       	ret
 268:	89 b3       	in	r24, 0x19	; 25
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	02 c0       	rjmp	.+4      	; 0x272 <DIO_getPinValue+0x2e>
 26e:	95 95       	asr	r25
 270:	87 95       	ror	r24
 272:	6a 95       	dec	r22
 274:	e2 f7       	brpl	.-8      	; 0x26e <DIO_getPinValue+0x2a>
 276:	80 ff       	sbrs	r24, 0
 278:	04 c0       	rjmp	.+8      	; 0x282 <DIO_getPinValue+0x3e>
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	fa 01       	movw	r30, r20
 27e:	80 83       	st	Z, r24
 280:	08 95       	ret
 282:	fa 01       	movw	r30, r20
 284:	10 82       	st	Z, r1
 286:	08 95       	ret
 288:	86 b3       	in	r24, 0x16	; 22
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	02 c0       	rjmp	.+4      	; 0x292 <DIO_getPinValue+0x4e>
 28e:	95 95       	asr	r25
 290:	87 95       	ror	r24
 292:	6a 95       	dec	r22
 294:	e2 f7       	brpl	.-8      	; 0x28e <DIO_getPinValue+0x4a>
 296:	80 ff       	sbrs	r24, 0
 298:	04 c0       	rjmp	.+8      	; 0x2a2 <DIO_getPinValue+0x5e>
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	fa 01       	movw	r30, r20
 29e:	80 83       	st	Z, r24
 2a0:	08 95       	ret
 2a2:	fa 01       	movw	r30, r20
 2a4:	10 82       	st	Z, r1
 2a6:	08 95       	ret
 2a8:	83 b3       	in	r24, 0x13	; 19
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	02 c0       	rjmp	.+4      	; 0x2b2 <DIO_getPinValue+0x6e>
 2ae:	95 95       	asr	r25
 2b0:	87 95       	ror	r24
 2b2:	6a 95       	dec	r22
 2b4:	e2 f7       	brpl	.-8      	; 0x2ae <DIO_getPinValue+0x6a>
 2b6:	80 ff       	sbrs	r24, 0
 2b8:	04 c0       	rjmp	.+8      	; 0x2c2 <DIO_getPinValue+0x7e>
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	fa 01       	movw	r30, r20
 2be:	80 83       	st	Z, r24
 2c0:	08 95       	ret
 2c2:	fa 01       	movw	r30, r20
 2c4:	10 82       	st	Z, r1
 2c6:	08 95       	ret
 2c8:	80 b3       	in	r24, 0x10	; 16
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <DIO_getPinValue+0x8e>
 2ce:	95 95       	asr	r25
 2d0:	87 95       	ror	r24
 2d2:	6a 95       	dec	r22
 2d4:	e2 f7       	brpl	.-8      	; 0x2ce <DIO_getPinValue+0x8a>
 2d6:	80 ff       	sbrs	r24, 0
 2d8:	04 c0       	rjmp	.+8      	; 0x2e2 <DIO_getPinValue+0x9e>
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	fa 01       	movw	r30, r20
 2de:	80 83       	st	Z, r24
 2e0:	08 95       	ret
 2e2:	fa 01       	movw	r30, r20
 2e4:	10 82       	st	Z, r1
 2e6:	08 95       	ret

000002e8 <DIO_setInputPinResistance>:
}

void DIO_setInputPinResistance (u8 PortId, u8 PinId)

{
	if ( (PortId<=3) && (PinId<=7) )
 2e8:	84 30       	cpi	r24, 0x04	; 4
 2ea:	a8 f5       	brcc	.+106    	; 0x356 <DIO_setInputPinResistance+0x6e>
 2ec:	68 30       	cpi	r22, 0x08	; 8
 2ee:	98 f5       	brcc	.+102    	; 0x356 <DIO_setInputPinResistance+0x6e>
	{
		switch (PortId) 
 2f0:	81 30       	cpi	r24, 0x01	; 1
 2f2:	89 f0       	breq	.+34     	; 0x316 <DIO_setInputPinResistance+0x2e>
 2f4:	28 f0       	brcs	.+10     	; 0x300 <DIO_setInputPinResistance+0x18>
 2f6:	82 30       	cpi	r24, 0x02	; 2
 2f8:	c9 f0       	breq	.+50     	; 0x32c <DIO_setInputPinResistance+0x44>
 2fa:	83 30       	cpi	r24, 0x03	; 3
 2fc:	11 f1       	breq	.+68     	; 0x342 <DIO_setInputPinResistance+0x5a>
 2fe:	08 95       	ret
		{
			case 0 : 
			SET_BIT(PORTA,PinId); 
 300:	2b b3       	in	r18, 0x1b	; 27
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	02 c0       	rjmp	.+4      	; 0x30c <DIO_setInputPinResistance+0x24>
 308:	88 0f       	add	r24, r24
 30a:	99 1f       	adc	r25, r25
 30c:	6a 95       	dec	r22
 30e:	e2 f7       	brpl	.-8      	; 0x308 <DIO_setInputPinResistance+0x20>
 310:	82 2b       	or	r24, r18
 312:	8b bb       	out	0x1b, r24	; 27
			break ;
 314:	08 95       	ret

            case 1 : 
			SET_BIT(PORTB,PinId); 
 316:	28 b3       	in	r18, 0x18	; 24
 318:	81 e0       	ldi	r24, 0x01	; 1
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	02 c0       	rjmp	.+4      	; 0x322 <DIO_setInputPinResistance+0x3a>
 31e:	88 0f       	add	r24, r24
 320:	99 1f       	adc	r25, r25
 322:	6a 95       	dec	r22
 324:	e2 f7       	brpl	.-8      	; 0x31e <DIO_setInputPinResistance+0x36>
 326:	82 2b       	or	r24, r18
 328:	88 bb       	out	0x18, r24	; 24
			break ; 
 32a:	08 95       	ret

            case 2 : 
			SET_BIT(PORTC,PinId); 
 32c:	25 b3       	in	r18, 0x15	; 21
 32e:	81 e0       	ldi	r24, 0x01	; 1
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	02 c0       	rjmp	.+4      	; 0x338 <DIO_setInputPinResistance+0x50>
 334:	88 0f       	add	r24, r24
 336:	99 1f       	adc	r25, r25
 338:	6a 95       	dec	r22
 33a:	e2 f7       	brpl	.-8      	; 0x334 <DIO_setInputPinResistance+0x4c>
 33c:	82 2b       	or	r24, r18
 33e:	85 bb       	out	0x15, r24	; 21
			break ; 
 340:	08 95       	ret

            case 3 : 
			SET_BIT(PORTD,PinId); 
 342:	22 b3       	in	r18, 0x12	; 18
 344:	81 e0       	ldi	r24, 0x01	; 1
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	02 c0       	rjmp	.+4      	; 0x34e <DIO_setInputPinResistance+0x66>
 34a:	88 0f       	add	r24, r24
 34c:	99 1f       	adc	r25, r25
 34e:	6a 95       	dec	r22
 350:	e2 f7       	brpl	.-8      	; 0x34a <DIO_setInputPinResistance+0x62>
 352:	82 2b       	or	r24, r18
 354:	82 bb       	out	0x12, r24	; 18
 356:	08 95       	ret

00000358 <main>:
#include "SWITCH_interface.h"
#include "LED_interface.h" 


int main(void)
{
 358:	cf 93       	push	r28
 35a:	df 93       	push	r29
 35c:	1f 92       	push	r1
 35e:	cd b7       	in	r28, 0x3d	; 61
 360:	de b7       	in	r29, 0x3e	; 62
	DIO_setPinDirection(DIO_PORTB,DIO_PIN0,DIO_PIN_INPUT); 
 362:	40 e0       	ldi	r20, 0x00	; 0
 364:	60 e0       	ldi	r22, 0x00	; 0
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_setPinDirection>
	DIO_setInputPinResistance(DIO_PORTB,DIO_PIN0);
 36c:	60 e0       	ldi	r22, 0x00	; 0
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DIO_setInputPinResistance>
	
    u8 switch_stateValue ; 
    while (1) 
    {
		SWITCH_getState(DIO_PORTB,DIO_PIN0,forward,&switch_stateValue);
 374:	9e 01       	movw	r18, r28
 376:	2f 5f       	subi	r18, 0xFF	; 255
 378:	3f 4f       	sbci	r19, 0xFF	; 255
 37a:	41 e0       	ldi	r20, 0x01	; 1
 37c:	60 e0       	ldi	r22, 0x00	; 0
 37e:	81 e0       	ldi	r24, 0x01	; 1
 380:	0e 94 dd 01 	call	0x3ba	; 0x3ba <SWITCH_getState>
		
		if (switch_stateValue == SWITCH_PRESSED )
 384:	89 81       	ldd	r24, Y+1	; 0x01
 386:	81 30       	cpi	r24, 0x01	; 1
 388:	59 f4       	brne	.+22     	; 0x3a0 <main+0x48>
		{
			DIO_setPinValue(DIO_PORTC,DIO_PIN2,DIO_PIN_HIGH);
 38a:	41 e0       	ldi	r20, 0x01	; 1
 38c:	62 e0       	ldi	r22, 0x02	; 2
 38e:	82 e0       	ldi	r24, 0x02	; 2
 390:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_setPinValue>
			DIO_setPinValue(DIO_PORTA,DIO_PIN3,DIO_PIN_HIGH);
 394:	41 e0       	ldi	r20, 0x01	; 1
 396:	63 e0       	ldi	r22, 0x03	; 3
 398:	80 e0       	ldi	r24, 0x00	; 0
 39a:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_setPinValue>
 39e:	ea cf       	rjmp	.-44     	; 0x374 <main+0x1c>
		}
		else if (switch_stateValue == SWITCH_NOT_PRESSED )
 3a0:	81 11       	cpse	r24, r1
 3a2:	e8 cf       	rjmp	.-48     	; 0x374 <main+0x1c>
		{
			DIO_setPinValue(DIO_PORTC,DIO_PIN2,DIO_PIN_LOW);
 3a4:	40 e0       	ldi	r20, 0x00	; 0
 3a6:	62 e0       	ldi	r22, 0x02	; 2
 3a8:	82 e0       	ldi	r24, 0x02	; 2
 3aa:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_setPinValue>
			DIO_setPinValue(DIO_PORTA,DIO_PIN3,DIO_PIN_LOW);
 3ae:	40 e0       	ldi	r20, 0x00	; 0
 3b0:	63 e0       	ldi	r22, 0x03	; 3
 3b2:	80 e0       	ldi	r24, 0x00	; 0
 3b4:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_setPinValue>
 3b8:	dd cf       	rjmp	.-70     	; 0x374 <main+0x1c>

000003ba <SWITCH_getState>:
/* HAL */
#include "SWITCH_interface.h"

void SWITCH_getState(u8 PortId, u8 PinId ,u8 connectionType ,u8* StateValue)

{
 3ba:	ef 92       	push	r14
 3bc:	ff 92       	push	r15
 3be:	1f 93       	push	r17
 3c0:	cf 93       	push	r28
 3c2:	df 93       	push	r29
 3c4:	1f 92       	push	r1
 3c6:	cd b7       	in	r28, 0x3d	; 61
 3c8:	de b7       	in	r29, 0x3e	; 62
	u8 Local_switchState ; 
    if ( (PortId<=3) && (PinId<=7) && (StateValue != NULL ) && (connectionType == forward || connectionType == reverse) ) 
 3ca:	84 30       	cpi	r24, 0x04	; 4
 3cc:	40 f5       	brcc	.+80     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 3ce:	68 30       	cpi	r22, 0x08	; 8
 3d0:	30 f5       	brcc	.+76     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 3d2:	21 15       	cp	r18, r1
 3d4:	31 05       	cpc	r19, r1
 3d6:	19 f1       	breq	.+70     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 3d8:	42 30       	cpi	r20, 0x02	; 2
 3da:	08 f5       	brcc	.+66     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 3dc:	79 01       	movw	r14, r18
 3de:	14 2f       	mov	r17, r20
	{
		DIO_getPinValue(PortId,PinId,&Local_switchState) ;
 3e0:	ae 01       	movw	r20, r28
 3e2:	4f 5f       	subi	r20, 0xFF	; 255
 3e4:	5f 4f       	sbci	r21, 0xFF	; 255
 3e6:	0e 94 22 01 	call	0x244	; 0x244 <DIO_getPinValue>
		
		if (connectionType == forward )
 3ea:	11 30       	cpi	r17, 0x01	; 1
 3ec:	59 f4       	brne	.+22     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
		{
			if (Local_switchState == 1)
 3ee:	89 81       	ldd	r24, Y+1	; 0x01
 3f0:	81 30       	cpi	r24, 0x01	; 1
 3f2:	19 f4       	brne	.+6      	; 0x3fa <SWITCH_getState+0x40>
			{
				*StateValue = SWITCH_PRESSED ;
 3f4:	f7 01       	movw	r30, r14
 3f6:	80 83       	st	Z, r24
 3f8:	12 c0       	rjmp	.+36     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
			}
			else if (Local_switchState == 0)
 3fa:	81 11       	cpse	r24, r1
 3fc:	10 c0       	rjmp	.+32     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
			{
				*StateValue = SWITCH_NOT_PRESSED ;
 3fe:	f7 01       	movw	r30, r14
 400:	10 82       	st	Z, r1
 402:	0d c0       	rjmp	.+26     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
			}	
		}
		
		else if (connectionType == reverse)
 404:	11 11       	cpse	r17, r1
 406:	0b c0       	rjmp	.+22     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
		{
			if (Local_switchState == 1)
 408:	89 81       	ldd	r24, Y+1	; 0x01
 40a:	81 30       	cpi	r24, 0x01	; 1
 40c:	19 f4       	brne	.+6      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
			{
				*StateValue = SWITCH_NOT_PRESSED ;
 40e:	f7 01       	movw	r30, r14
 410:	10 82       	st	Z, r1
 412:	05 c0       	rjmp	.+10     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
			}
			else if (Local_switchState == 0)
 414:	81 11       	cpse	r24, r1
 416:	03 c0       	rjmp	.+6      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
			{
				*StateValue = SWITCH_PRESSED ;
 418:	81 e0       	ldi	r24, 0x01	; 1
 41a:	f7 01       	movw	r30, r14
 41c:	80 83       	st	Z, r24
			}
		}
		
	}
 41e:	0f 90       	pop	r0
 420:	df 91       	pop	r29
 422:	cf 91       	pop	r28
 424:	1f 91       	pop	r17
 426:	ff 90       	pop	r15
 428:	ef 90       	pop	r14
 42a:	08 95       	ret

0000042c <_exit>:
 42c:	f8 94       	cli

0000042e <__stop_program>:
 42e:	ff cf       	rjmp	.-2      	; 0x42e <__stop_program>
